{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    products: [],\n    quantity: 0,\n    total: 0\n  },\n  reducers: {\n    addProduct: (state, action) => {\n      const {\n        _id,\n        name,\n        price\n      } = action.payload;\n\n      // Check if the product already exists in the cart\n      const existingProduct = state.products.find(product => product._id === _id);\n      if (existingProduct) {\n        // If the product already exists, update its quantity\n        existingProduct.quantity += 1;\n      } else {\n        // If the product is new, add it to the cart\n        state.products.push({\n          _id,\n          name,\n          price,\n          quantity: 1\n        });\n      }\n\n      // Update total quantity and price\n      state.quantity += 1;\n      state.total += price;\n    }\n  }\n});\nexport const {\n  addProduct\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","products","quantity","total","reducers","addProduct","state","action","_id","price","payload","existingProduct","find","product","push","actions","reducer"],"sources":["F:/Store project/client/src/redux/cartRedux.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    products: [],\r\n    quantity: 0,\r\n    total: 0,\r\n  },\r\n  reducers: {\r\n    addProduct: (state, action) => {\r\n      const { _id, name, price } = action.payload;\r\n\r\n      // Check if the product already exists in the cart\r\n      const existingProduct = state.products.find((product) => product._id === _id);\r\n\r\n      if (existingProduct) {\r\n        // If the product already exists, update its quantity\r\n        existingProduct.quantity += 1;\r\n      } else {\r\n        // If the product is new, add it to the cart\r\n        state.products.push({ _id, name, price, quantity: 1 });\r\n      }\r\n\r\n      // Update total quantity and price\r\n      state.quantity += 1;\r\n      state.total += price;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { addProduct } = cartSlice.actions;\r\nexport default cartSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,CAAC;IACXC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAM;QAAEC,GAAG;QAAET,IAAI;QAAEU;MAAM,CAAC,GAAGF,MAAM,CAACG,OAAO;;MAE3C;MACA,MAAMC,eAAe,GAAGL,KAAK,CAACL,QAAQ,CAACW,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACL,GAAG,KAAKA,GAAG,CAAC;MAE7E,IAAIG,eAAe,EAAE;QACnB;QACAA,eAAe,CAACT,QAAQ,IAAI,CAAC;MAC/B,CAAC,MAAM;QACL;QACAI,KAAK,CAACL,QAAQ,CAACa,IAAI,CAAC;UAAEN,GAAG;UAAET,IAAI;UAAEU,KAAK;UAAEP,QAAQ,EAAE;QAAE,CAAC,CAAC;MACxD;;MAEA;MACAI,KAAK,CAACJ,QAAQ,IAAI,CAAC;MACnBI,KAAK,CAACH,KAAK,IAAIM,KAAK;IACtB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ;AAAW,CAAC,GAAGP,SAAS,CAACiB,OAAO;AAC/C,eAAejB,SAAS,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}