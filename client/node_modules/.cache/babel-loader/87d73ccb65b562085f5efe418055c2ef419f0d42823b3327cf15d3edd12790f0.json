{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    products: [],\n    quantity: 0,\n    total: 0\n  },\n  reducers: {\n    addProduct: (state, action) => {\n      const existingProductIndex = state.products.findIndex(product => product._id === action.payload._id);\n      if (existingProductIndex !== -1) {\n        state.products[existingProductIndex].quantity += action.payload.quantity;\n        state.total += action.payload.price * action.payload.quantity;\n      } else {\n        state.products.push(action.payload);\n        state.total += action.payload.price * action.payload.quantity;\n      }\n      state.quantity += action.payload.quantity;\n    }\n  },\n  clearCart: state => {\n    state.products = [];\n    state.quantity = 0;\n    state.total = 0;\n  }\n});\nexport const {\n  addProduct\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","products","quantity","total","reducers","addProduct","state","action","existingProductIndex","findIndex","product","_id","payload","price","push","clearCart","actions","reducer"],"sources":["F:/Store project/client/src/redux/cartRedux.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: {\r\n    products: [],\r\n    quantity: 0,\r\n    total: 0,\r\n  },\r\n  reducers: {\r\n    addProduct: (state, action) => {\r\n      const existingProductIndex = state.products.findIndex(\r\n        (product) => product._id === action.payload._id\r\n      );\r\n\r\n      if (existingProductIndex !== -1) {\r\n        state.products[existingProductIndex].quantity += action.payload.quantity\r\n        state.total += action.payload.price * action.payload.quantity\r\n      } else {\r\n        state.products.push(action.payload)\r\n        state.total += action.payload.price * action.payload.quantity\r\n      }\r\n\r\n      state.quantity += action.payload.quantity;\r\n    },\r\n  },\r\n  clearCart: (state) => {\r\n    state.products = []\r\n    state.quantity = 0\r\n    state.total = 0 \r\n  }\r\n});\r\n\r\nexport const { addProduct } = cartSlice.actions\r\nexport default cartSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,CAAC;IACXC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7B,MAAMC,oBAAoB,GAAGF,KAAK,CAACL,QAAQ,CAACQ,SAAS,CAClDC,OAAO,IAAKA,OAAO,CAACC,GAAG,KAAKJ,MAAM,CAACK,OAAO,CAACD,GAC9C,CAAC;MAED,IAAIH,oBAAoB,KAAK,CAAC,CAAC,EAAE;QAC/BF,KAAK,CAACL,QAAQ,CAACO,oBAAoB,CAAC,CAACN,QAAQ,IAAIK,MAAM,CAACK,OAAO,CAACV,QAAQ;QACxEI,KAAK,CAACH,KAAK,IAAII,MAAM,CAACK,OAAO,CAACC,KAAK,GAAGN,MAAM,CAACK,OAAO,CAACV,QAAQ;MAC/D,CAAC,MAAM;QACLI,KAAK,CAACL,QAAQ,CAACa,IAAI,CAACP,MAAM,CAACK,OAAO,CAAC;QACnCN,KAAK,CAACH,KAAK,IAAII,MAAM,CAACK,OAAO,CAACC,KAAK,GAAGN,MAAM,CAACK,OAAO,CAACV,QAAQ;MAC/D;MAEAI,KAAK,CAACJ,QAAQ,IAAIK,MAAM,CAACK,OAAO,CAACV,QAAQ;IAC3C;EACF,CAAC;EACDa,SAAS,EAAGT,KAAK,IAAK;IACpBA,KAAK,CAACL,QAAQ,GAAG,EAAE;IACnBK,KAAK,CAACJ,QAAQ,GAAG,CAAC;IAClBI,KAAK,CAACH,KAAK,GAAG,CAAC;EACjB;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE;AAAW,CAAC,GAAGP,SAAS,CAACkB,OAAO;AAC/C,eAAelB,SAAS,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}